%% BayesoptScript

clc;
clear;
close all;

%basePath = '/mnt/fast/nobackup/users/jm01527/';
%addpath(genpath([basePath, 'Diffraction-toolbox']))
%addpath(genpath([basePath, 'Edge-diffraction-Matlab-toolbox']))
%addpath(genpath([basePath, 'misc-files']))

fs = 48e3;
nfft = 4096;

output1 = 10;
output2 = 14;

lpFc = SIgnoutput1 * 1e4;
hpFc = output2 * 1e4;
G = 5
k = 1;

T = 1 / fs;
omega = 2 * pi * lpFc;
K = omega * T;

b(:,1,:) = [K; K];
a(:,1,:) = [K + 2; K - 2];
b(:,1,:) = squeeze(b(:,1,:)) .* k;

omega = 2 * pi * hpFc;
K = omega * T;
B0 = 10 ^ (G / 20);
b(:,2,:) = [K + 2 * B0; K - 2 * B0];
a(:,2,:) = [K + 2; K - 2];

[tfmag, fvec, ~] = CalculateFilterResponse(b, a, nfft, fs);


figure
semilogx(fvec, tfmag)
grid on
ylim([-30 10])


%% Set up data
fs = 96e3;
nfft = 16384;
c = 344;
controlparameters = struct('fs', fs, 'nfft', nfft, 'difforder', 1, 'c', c, 'saveFiles', 2);

numFilters = 2;
nBands = 12;
[~, tfmag, ~, fvec, ~] = DefaultBTM(controlparameters);
[~, ~, fidx] = CreateFrequencyNBands(tfmag, fvec, nBands);

%% IIR filters
filterFunc = @(output, target) IIRFilterLoss(output, target, numFilters, nfft, fs, fidx);
numOutputs = 2 * numFilters + 1;
controlparameters.filterType = 'IIR';

lossFunc = @(net, trainingData, targetData) NNFilterLoss(net, trainingData, targetData, filterFunc, true);

% Optimise hyperparameters
% disp('IIR - 700')
% networkSize = 700;
% BayesoptNeuralNetwork(lossFunc, networkSize, numOutputs, controlparameters)

disp('IIR - 100,000')
networkSize = 100000;
BayesoptNeuralNetwork(lossFunc, networkSize, numOutputs, controlparameters)

%% Biquads
filterFunc = @(output, target) BiquadLoss(output, target, numFilters, nfft, fs, fidx);
numOutputs = 4 * numFilters + 1;
controlparameters.filterType = 'Biquad';

lossFunc = @(net, trainingData, targetData) NNFilterLoss(net, trainingData, targetData, filterFunc, true);

% Optimise hyperparameters
disp('Biquad - 100,000')
networkSize = 100000;
BayesoptNeuralNetwork(lossFunc, networkSize, numOutputs, controlparameters)

% disp('Biquad - 350')
% networkSize = 350;
% BayesoptNeuralNetwork(lossFunc, networkSize, numOutputs, controlparameters)